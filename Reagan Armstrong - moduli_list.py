
import math
from pickle import FALSE
from pprint import pformat
from sympy import true
from sympy import nextprime
import sympy.ntheory.primetest as pt
import random
moduli = [1625833713795062132243809641180295621859037849014862667632592817806326526679316249170079379482396757958767673122298878505593186820719287899120235712682080002560617084112898753600400219879669286238580873990894547620126476327020589568358306867600951894292924524026922580960978639920743400828891586888999271, 3358232945614365705045997525432349319008709191925135698211771076465098184103692578483981911947384895693309794733025725690261349663008793992695798141079131017952228515019888054433896401875773545647293735570545155747023960016560234257211164514929560254751699614120150598431113458400120804633968280201337381883,
          1045306910846470391309846037017294203734672193458485636429350049468169618745891488338781177498216513044582402590106525282552063467634274212413073898778813319142302666910866276809021295454781355011046240546528682578879445201492391249453364668162953865455669854099634523849594310751361757555357382540676647977, 117902941171512195692685251001370142272137623210827161486148126688898662276258800947905509896513218130346889649343543702006974916340446858139686011633443549685364194198068238671337360397211991562773709372987379538218203562292977175022638780600179585858638815572146815283963487430315629646781858871832564093169, 11680561200747776594333872979477655735263048945145021926763546861036489220374710743590557723021583611285398356254306293561420770803368139677514848662782460018519337451867863515212677134694153121251429700416525237993039353517897297128632929347785450251177261100657864228398218723562344801656195817930460118681]


def is_weak(N):
    x = math.floor(math.isqrt(N))
    if pt.isprime(x):
        y = N//x
        if y*x == N:
            return True
        return False
    for i in range(200):
        x = nextprime(x)
        if N % x == 0:
            if pt.isprime(x):
                y = N//x
                if y*x == N:
                    return True
                return False
    return False

    # Generate p and q
if __name__ == "__main__":
    for i in moduli:
        print(f"N: {i}\nWeak RSA?: {is_weak(i)}\n")
